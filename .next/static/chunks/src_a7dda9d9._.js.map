{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["export function calculateFinalPrice({\n  costoInicial,\n  ganancia,\n  gastos,\n  publicidad,\n  ingresosBrutos,\n  costoFijoML,\n  mercadolibre,\n  costoFinanciero,\n  pagoNube,\n  iva,\n  comisionTiendaNube,\n}: {\n  costoInicial: number\n  ganancia: number\n  gastos: number\n  publicidad: number\n  ingresosBrutos: number\n  costoFijoML: number\n  mercadolibre: number\n  costoFinanciero: number\n  pagoNube: number\n  iva: number\n  comisionTiendaNube: number\n}): number {\n  // Convert percentages to decimals\n  const pagoNubeConIva = pagoNube * (1 + iva / 100)\n  const sumaPorcentajes =\n    (gastos +\n      publicidad +\n      ingresosBrutos +\n      mercadolibre +\n      costoFinanciero +\n      pagoNubeConIva +\n      comisionTiendaNube) /\n    100\n\n  const denominador = 1 - sumaPorcentajes\n\n  if (denominador <= 0) {\n    throw new Error(\n      'La suma de los porcentajes es demasiado alta, no se puede calcular el precio final.'\n    )\n  }\n\n  const precioFinal =\n    (costoInicial + ganancia + costoFijoML) / denominador\n\n  return precioFinal\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,oBAAoB,EAClC,YAAY,EACZ,QAAQ,EACR,MAAM,EACN,UAAU,EACV,cAAc,EACd,WAAW,EACX,YAAY,EACZ,eAAe,EACf,QAAQ,EACR,GAAG,EACH,kBAAkB,EAanB;IACC,kCAAkC;IAClC,MAAM,iBAAiB,WAAW,CAAC,IAAI,MAAM,GAAG;IAChD,MAAM,kBACJ,CAAC,SACC,aACA,iBACA,eACA,kBACA,iBACA,kBAAkB,IACpB;IAEF,MAAM,cAAc,IAAI;IAExB,IAAI,eAAe,GAAG;QACpB,MAAM,IAAI,MACR;IAEJ;IAEA,MAAM,cACJ,CAAC,eAAe,WAAW,WAAW,IAAI;IAE5C,OAAO;AACT","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/CalculatorForm.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState } from \"react\"\nimport { calculateFinalPrice } from \"@/lib/utils\"\n\ninterface CalculatorFormProps {\n  onCalculation?: (\n    price: number | null,\n    params: {\n      costoInicial: number\n      gastos: number\n      ganancia: number\n      publicidad: number\n      ingresosBrutos: number\n      costoFijoML: number\n      mercadolibre: number\n      costoFinanciero: number\n      pagoNube: number\n      iva: number\n      comisionTiendaNube: number\n    } | null\n  ) => void\n}\n\nexport default function CalculatorForm({ onCalculation }: CalculatorFormProps) {\n  const [costoInicial, setCostoInicial] = useState(4800)\n  const [gastos, setGastos] = useState(10)\n  const [ganancia, setGanancia] = useState(3500)\n  const [publicidad, setPublicidad] = useState(10)\n  const [ingresosBrutos, setIngresosBrutos] = useState(5)\n  const [costoFijoML, setCostoFijoML] = useState(1800)\n  const [mercadolibre, setMercadolibre] = useState(16)\n  const [costoFinanciero, setCostoFinanciero] = useState(5)\n  const [pagoNube, setPagoNube] = useState(5)\n  const [iva, setIva] = useState(21)\n  const [comisionTiendaNube, setComisionTiendaNube] = useState(5)\n\n  const [precioFinal, setPrecioFinal] = useState<number | null>(null)\n  const [detalleCostos, setDetalleCostos] = useState<any>(null)\n  const [error, setError] = useState<string | null>(null)\n\n  function handleCalculate() {\n    setError(null)\n    try {\n      const precio = calculateFinalPrice({\n        costoInicial,\n        ganancia,\n        gastos,\n        publicidad,\n        ingresosBrutos,\n        costoFijoML,\n        mercadolibre,\n        costoFinanciero,\n        pagoNube,\n        iva,\n        comisionTiendaNube,\n      })\n\n      // Calcular detalle de costos\n      const pagoNubeConIva = pagoNube * (1 + iva / 100)\n      const costosCalculados = {\n        gastosPesos: (precio * gastos) / 100,\n        publicidadPesos: (precio * publicidad) / 100,\n        ingresosBrutosPesos: (precio * ingresosBrutos) / 100,\n        mercadolibrePesos: (precio * mercadolibre) / 100,\n        costoFinancieroPesos: (precio * costoFinanciero) / 100,\n        pagoNubePesos: (precio * pagoNubeConIva) / 100,\n        comisionTiendaNubePesos: (precio * comisionTiendaNube) / 100,\n        costoFijoMLPesos: costoFijoML,\n        totalCostos: 0,\n        gananciaNeta: 0,\n      }\n\n      costosCalculados.totalCostos =\n        costosCalculados.gastosPesos +\n        costosCalculados.publicidadPesos +\n        costosCalculados.ingresosBrutosPesos +\n        costosCalculados.mercadolibrePesos +\n        costosCalculados.costoFinancieroPesos +\n        costosCalculados.pagoNubePesos +\n        costosCalculados.comisionTiendaNubePesos +\n        costosCalculados.costoFijoMLPesos\n\n      costosCalculados.gananciaNeta =\n        precio - costosCalculados.totalCostos - costoInicial\n\n      setPrecioFinal(precio)\n      setDetalleCostos(costosCalculados)\n\n      if (onCalculation) {\n        onCalculation(precio, {\n          costoInicial,\n          gastos,\n          ganancia,\n          publicidad,\n          ingresosBrutos,\n          costoFijoML,\n          mercadolibre,\n          costoFinanciero,\n          pagoNube,\n          iva,\n          comisionTiendaNube,\n        })\n      }\n    } catch (e) {\n      if (e instanceof Error) {\n        setError(e.message)\n      }\n      setPrecioFinal(null)\n      setDetalleCostos(null)\n      if (onCalculation) {\n        onCalculation(null, null)\n      }\n    }\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-md shadow-md\">\n      <h2 className=\"text-2xl font-semibold mb-4\">Calculadora de Precio</h2>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <label className=\"flex flex-col\">\n          Costo Inicial\n          <input\n            type=\"number\"\n            value={costoInicial}\n            onChange={(e) => setCostoInicial(Number(e.target.value))}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          Gastos (%)\n          <input\n            type=\"number\"\n            value={gastos}\n            onChange={(e) => setGastos(Number(e.target.value))}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          Ganancia ($)\n          <input\n            type=\"number\"\n            value={ganancia}\n            onChange={(e) => setGanancia(Number(e.target.value))}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          Publicidad (%)\n          <input\n            type=\"number\"\n            value={publicidad}\n            onChange={(e) => setPublicidad(Number(e.target.value))}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          Ingresos Brutos (%)\n          <input\n            type=\"number\"\n            value={ingresosBrutos}\n            onChange={(e) => setIngresosBrutos(Number(e.target.value))}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          Costo Fijo ML ($)\n          <input\n            type=\"number\"\n            value={costoFijoML}\n            onChange={(e) => setCostoFijoML(Number(e.target.value))}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          MercadoLibre (%)\n          <input\n            type=\"number\"\n            value={mercadolibre}\n            onChange={(e) => setMercadolibre(Number(e.target.value))}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          Costo Financiero (%)\n          <input\n            type=\"number\"\n            value={costoFinanciero}\n            onChange={(e) => setCostoFinanciero(Number(e.target.value))}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          Pago Nube (%)\n          <input\n            type=\"number\"\n            value={pagoNube}\n            onChange={(e) => setPagoNube(Number(e.target.value))}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          IVA (%)\n          <input\n            type=\"number\"\n            value={iva}\n            onChange={(e) => setIva(Number(e.target.value))}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          Comisi√≥n Tienda Nube (%)\n          <input\n            type=\"number\"\n            value={comisionTiendaNube}\n            onChange={(e) => setComisionTiendaNube(Number(e.target.value))}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n      </div>\n      <button\n        onClick={handleCalculate}\n        className=\"mt-6 px-4 py-2 bg-black text-white rounded hover:bg-gray-800 transition\"\n      >\n        Calcular Precio\n      </button>\n      {error && <p className=\"mt-4 text-red-600\">{error}</p>}\n      {precioFinal !== null && !error && (\n        <div className=\"mt-6\">\n          <div className=\"bg-gray-50 p-4 rounded-md\">\n            <h3 className=\"text-xl font-semibold mb-4\">Precio Final Calculado: ${precioFinal.toFixed(2)}</h3>\n            \n            {detalleCostos && (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <h4 className=\"font-semibold mb-2\">Detalle de Costos (en Pesos):</h4>\n                  <ul className=\"space-y-1 text-sm\">\n                    <li>Gastos ({gastos}%): ${detalleCostos.gastosPesos.toFixed(2)}</li>\n                    <li>Publicidad ({publicidad}%): ${detalleCostos.publicidadPesos.toFixed(2)}</li>\n                    <li>Ingresos Brutos ({ingresosBrutos}%): ${detalleCostos.ingresosBrutosPesos.toFixed(2)}</li>\n                    <li>MercadoLibre ({mercadolibre}%): ${detalleCostos.mercadolibrePesos.toFixed(2)}</li>\n                    <li>Costo Financiero ({costoFinanciero}%): ${detalleCostos.costoFinancieroPesos.toFixed(2)}</li>\n                    <li>Pago Nube ({pagoNube}% + {iva}% IVA): ${detalleCostos.pagoNubePesos.toFixed(2)}</li>\n                    <li>Comisi√≥n Tienda Nube ({comisionTiendaNube}%): ${detalleCostos.comisionTiendaNubePesos.toFixed(2)}</li>\n                    <li>Costo Fijo ML: ${detalleCostos.costoFijoMLPesos.toFixed(2)}</li>\n                  </ul>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold mb-2\">Resumen:</h4>\n                  <ul className=\"space-y-1 text-sm\">\n                    <li>Precio de Venta: ${precioFinal.toFixed(2)}</li>\n                    <li>Total Costos: ${detalleCostos.totalCostos.toFixed(2)}</li>\n                    <li>Costo Inicial: ${costoInicial.toFixed(2)}</li>\n                    <li className=\"font-semibold border-t pt-1\">Ganancia Neta: ${detalleCostos.gananciaNeta.toFixed(2)}</li>\n                    <li className=\"text-xs text-gray-600\">Ganancia Esperada: ${ganancia.toFixed(2)}</li>\n                  </ul>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAwBe,SAAS,eAAe,EAAE,aAAa,EAAuB;;IAC3E,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/B,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAC9D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IACxD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,SAAS;QACP,SAAS;QACT,IAAI;YACF,MAAM,SAAS,CAAA,GAAA,sHAAA,CAAA,sBAAmB,AAAD,EAAE;gBACjC;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;YACF;YAEA,6BAA6B;YAC7B,MAAM,iBAAiB,WAAW,CAAC,IAAI,MAAM,GAAG;YAChD,MAAM,mBAAmB;gBACvB,aAAa,AAAC,SAAS,SAAU;gBACjC,iBAAiB,AAAC,SAAS,aAAc;gBACzC,qBAAqB,AAAC,SAAS,iBAAkB;gBACjD,mBAAmB,AAAC,SAAS,eAAgB;gBAC7C,sBAAsB,AAAC,SAAS,kBAAmB;gBACnD,eAAe,AAAC,SAAS,iBAAkB;gBAC3C,yBAAyB,AAAC,SAAS,qBAAsB;gBACzD,kBAAkB;gBAClB,aAAa;gBACb,cAAc;YAChB;YAEA,iBAAiB,WAAW,GAC1B,iBAAiB,WAAW,GAC5B,iBAAiB,eAAe,GAChC,iBAAiB,mBAAmB,GACpC,iBAAiB,iBAAiB,GAClC,iBAAiB,oBAAoB,GACrC,iBAAiB,aAAa,GAC9B,iBAAiB,uBAAuB,GACxC,iBAAiB,gBAAgB;YAEnC,iBAAiB,YAAY,GAC3B,SAAS,iBAAiB,WAAW,GAAG;YAE1C,eAAe;YACf,iBAAiB;YAEjB,IAAI,eAAe;gBACjB,cAAc,QAAQ;oBACpB;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;gBACF;YACF;QACF,EAAE,OAAO,GAAG;YACV,IAAI,aAAa,OAAO;gBACtB,SAAS,EAAE,OAAO;YACpB;YACA,eAAe;YACf,iBAAiB;YACjB,IAAI,eAAe;gBACjB,cAAc,MAAM;YACtB;QACF;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA8B;;;;;;0BAC5C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,gBAAgB,OAAO,EAAE,MAAM,CAAC,KAAK;gCACtD,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,UAAU,OAAO,EAAE,MAAM,CAAC,KAAK;gCAChD,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,YAAY,OAAO,EAAE,MAAM,CAAC,KAAK;gCAClD,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,cAAc,OAAO,EAAE,MAAM,CAAC,KAAK;gCACpD,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,kBAAkB,OAAO,EAAE,MAAM,CAAC,KAAK;gCACxD,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,eAAe,OAAO,EAAE,MAAM,CAAC,KAAK;gCACrD,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,gBAAgB,OAAO,EAAE,MAAM,CAAC,KAAK;gCACtD,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,mBAAmB,OAAO,EAAE,MAAM,CAAC,KAAK;gCACzD,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,YAAY,OAAO,EAAE,MAAM,CAAC,KAAK;gCAClD,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,OAAO,OAAO,EAAE,MAAM,CAAC,KAAK;gCAC7C,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,sBAAsB,OAAO,EAAE,MAAM,CAAC,KAAK;gCAC5D,WAAU;;;;;;;;;;;;;;;;;;0BAIhB,6LAAC;gBACC,SAAS;gBACT,WAAU;0BACX;;;;;;YAGA,uBAAS,6LAAC;gBAAE,WAAU;0BAAqB;;;;;;YAC3C,gBAAgB,QAAQ,CAAC,uBACxB,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;;gCAA6B;gCAA0B,YAAY,OAAO,CAAC;;;;;;;wBAExF,+BACC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;sDAAqB;;;;;;sDACnC,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC;;wDAAG;wDAAS;wDAAO;wDAAM,cAAc,WAAW,CAAC,OAAO,CAAC;;;;;;;8DAC5D,6LAAC;;wDAAG;wDAAa;wDAAW;wDAAM,cAAc,eAAe,CAAC,OAAO,CAAC;;;;;;;8DACxE,6LAAC;;wDAAG;wDAAkB;wDAAe;wDAAM,cAAc,mBAAmB,CAAC,OAAO,CAAC;;;;;;;8DACrF,6LAAC;;wDAAG;wDAAe;wDAAa;wDAAM,cAAc,iBAAiB,CAAC,OAAO,CAAC;;;;;;;8DAC9E,6LAAC;;wDAAG;wDAAmB;wDAAgB;wDAAM,cAAc,oBAAoB,CAAC,OAAO,CAAC;;;;;;;8DACxF,6LAAC;;wDAAG;wDAAY;wDAAS;wDAAK;wDAAI;wDAAU,cAAc,aAAa,CAAC,OAAO,CAAC;;;;;;;8DAChF,6LAAC;;wDAAG;wDAAuB;wDAAmB;wDAAM,cAAc,uBAAuB,CAAC,OAAO,CAAC;;;;;;;8DAClG,6LAAC;;wDAAG;wDAAiB,cAAc,gBAAgB,CAAC,OAAO,CAAC;;;;;;;;;;;;;;;;;;;8CAGhE,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;sDAAqB;;;;;;sDACnC,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC;;wDAAG;wDAAmB,YAAY,OAAO,CAAC;;;;;;;8DAC3C,6LAAC;;wDAAG;wDAAgB,cAAc,WAAW,CAAC,OAAO,CAAC;;;;;;;8DACtD,6LAAC;;wDAAG;wDAAiB,aAAa,OAAO,CAAC;;;;;;;8DAC1C,6LAAC;oDAAG,WAAU;;wDAA8B;wDAAiB,cAAc,YAAY,CAAC,OAAO,CAAC;;;;;;;8DAChG,6LAAC;oDAAG,WAAU;;wDAAwB;wDAAqB,SAAS,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUhG;GAhPwB;KAAA","debugId":null}},
    {"offset": {"line": 628, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ProductForm.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState } from \"react\"\n\ninterface ProductFormProps {\n  onAddProduct: (product: {\n    code: string\n    name: string\n    type: \"minorista\" | \"mayorista\"\n    price?: number\n    calculationParams?: {\n      costoInicial: number\n      gastos: number\n      ganancia: number\n      publicidad: number\n      ingresosBrutos: number\n      costoFijoML: number\n      mercadolibre: number\n      costoFinanciero: number\n      pagoNube: number\n      iva: number\n      comisionTiendaNube: number\n    }\n  }) => void\n  calculatedPrice?: number | null\n  calculationParams?: {\n    costoInicial: number\n    gastos: number\n    ganancia: number\n    publicidad: number\n    ingresosBrutos: number\n    costoFijoML: number\n    mercadolibre: number\n    costoFinanciero: number\n    pagoNube: number\n    iva: number\n    comisionTiendaNube: number\n  } | null\n}\n\nexport default function ProductForm({\n  onAddProduct,\n  calculatedPrice,\n  calculationParams,\n}: ProductFormProps) {\n  const [code, setCode] = useState(\"\")\n  const [name, setName] = useState(\"\")\n  const [type, setType] = useState<\"minorista\" | \"mayorista\">(\"minorista\")\n  const [error, setError] = useState<string | null>(null)\n  const [success, setSuccess] = useState<string | null>(null)\n\n  function handleSubmit(e: React.FormEvent) {\n    e.preventDefault()\n    setError(null)\n    setSuccess(null)\n\n    if (!code.trim() || !name.trim()) {\n      setError(\"Por favor, complete ambos campos: c√≥digo y nombre.\")\n      return\n    }\n\n    onAddProduct({\n      code: code.trim(),\n      name: name.trim(),\n      type,\n      price: calculatedPrice || undefined,\n      calculationParams: calculationParams || undefined,\n    })\n    setCode(\"\")\n    setName(\"\")\n    setSuccess(\"Producto registrado correctamente.\")\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-md shadow-md mt-8\">\n      <h2 className=\"text-2xl font-semibold mb-4\">Registrar Producto</h2>\n      {calculatedPrice && (\n        <div className=\"mb-4 p-3 bg-green-50 border border-green-200 rounded-md\">\n          <p className=\"text-green-800 font-medium\">\n            Precio calculado disponible: ${calculatedPrice.toFixed(2)}\n          </p>\n          <p className=\"text-green-600 text-sm\">\n            Este precio y sus par√°metros se guardar√°n autom√°ticamente con el producto.\n          </p>\n        </div>\n      )}\n      <form onSubmit={handleSubmit} className=\"grid grid-cols-1 md:grid-cols-4 gap-4 items-end\">\n        <div className=\"flex flex-col\">\n          <label htmlFor=\"code\" className=\"mb-1 font-medium\">\n            C√≥digo\n          </label>\n          <input\n            id=\"code\"\n            type=\"text\"\n            value={code}\n            onChange={(e) => setCode(e.target.value)}\n            className=\"p-2 border rounded\"\n          />\n        </div>\n        <div className=\"flex flex-col\">\n          <label htmlFor=\"name\" className=\"mb-1 font-medium\">\n            Nombre\n          </label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            className=\"p-2 border rounded\"\n          />\n        </div>\n        <div className=\"flex flex-col\">\n          <label htmlFor=\"type\" className=\"mb-1 font-medium\">\n            Tipo\n          </label>\n          <select\n            id=\"type\"\n            value={type}\n            onChange={(e) => setType(e.target.value as \"minorista\" | \"mayorista\")}\n            className=\"p-2 border rounded\"\n          >\n            <option value=\"minorista\">Minorista</option>\n            <option value=\"mayorista\">Mayorista</option>\n          </select>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"px-4 py-2 bg-black text-white rounded hover:bg-gray-800 transition\"\n        >\n          Agregar Producto\n        </button>\n      </form>\n      {error && <p className=\"mt-4 text-red-600\">{error}</p>}\n      {success && <p className=\"mt-4 text-green-600\">{success}</p>}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAwCe,SAAS,YAAY,EAClC,YAAY,EACZ,eAAe,EACf,iBAAiB,EACA;;IACjB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA6B;IAC5D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEtD,SAAS,aAAa,CAAkB;QACtC,EAAE,cAAc;QAChB,SAAS;QACT,WAAW;QAEX,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI;YAChC,SAAS;YACT;QACF;QAEA,aAAa;YACX,MAAM,KAAK,IAAI;YACf,MAAM,KAAK,IAAI;YACf;YACA,OAAO,mBAAmB;YAC1B,mBAAmB,qBAAqB;QAC1C;QACA,QAAQ;QACR,QAAQ;QACR,WAAW;IACb;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA8B;;;;;;YAC3C,iCACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAE,WAAU;;4BAA6B;4BACT,gBAAgB,OAAO,CAAC;;;;;;;kCAEzD,6LAAC;wBAAE,WAAU;kCAAyB;;;;;;;;;;;;0BAK1C,6LAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAM,SAAQ;gCAAO,WAAU;0CAAmB;;;;;;0CAGnD,6LAAC;gCACC,IAAG;gCACH,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;gCACvC,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAM,SAAQ;gCAAO,WAAU;0CAAmB;;;;;;0CAGnD,6LAAC;gCACC,IAAG;gCACH,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;gCACvC,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAM,SAAQ;gCAAO,WAAU;0CAAmB;;;;;;0CAGnD,6LAAC;gCACC,IAAG;gCACH,OAAO;gCACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;gCACvC,WAAU;;kDAEV,6LAAC;wCAAO,OAAM;kDAAY;;;;;;kDAC1B,6LAAC;wCAAO,OAAM;kDAAY;;;;;;;;;;;;;;;;;;kCAG9B,6LAAC;wBACC,MAAK;wBACL,WAAU;kCACX;;;;;;;;;;;;YAIF,uBAAS,6LAAC;gBAAE,WAAU;0BAAqB;;;;;;YAC3C,yBAAW,6LAAC;gBAAE,WAAU;0BAAuB;;;;;;;;;;;;AAGtD;GAhGwB;KAAA","debugId":null}},
    {"offset": {"line": 861, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ProductList.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState } from \"react\"\nimport { calculateFinalPrice } from \"@/lib/utils\"\n\ninterface Product {\n  id: string\n  code: string\n  name: string\n  price?: number\n  type: \"minorista\" | \"mayorista\"\n  calculationParams?: {\n    costoInicial: number\n    gastos: number\n    ganancia: number\n    publicidad: number\n    ingresosBrutos: number\n    costoFijoML: number\n    mercadolibre: number\n    costoFinanciero: number\n    pagoNube: number\n    iva: number\n    comisionTiendaNube: number\n  }\n}\n\ninterface ProductListProps {\n  products: Product[]\n  onUpdateProduct: (id: string, updates: Partial<Product>) => void\n  onDeleteProduct: (id: string) => void\n}\n\nexport default function ProductList({\n  products,\n  onUpdateProduct,\n  onDeleteProduct,\n}: ProductListProps) {\n  const [activeTab, setActiveTab] = useState<\"minorista\" | \"mayorista\">(\"minorista\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [editingId, setEditingId] = useState<string | null>(null)\n  const [editForm, setEditForm] = useState({ code: \"\", name: \"\", price: \"\" })\n  const [viewingDetailsId, setViewingDetailsId] = useState<string | null>(null)\n\n  const filteredProducts = products\n    .filter((product) => product.type === activeTab)\n    .filter(\n      (product) =>\n        product.code.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        product.name.toLowerCase().includes(searchTerm.toLowerCase())\n    )\n\n  function handleEdit(product: Product) {\n    setEditingId(product.id)\n    setEditForm({\n      code: product.code,\n      name: product.name,\n      price: product.price?.toString() || \"\",\n    })\n  }\n\n  function handleSaveEdit() {\n    if (editingId) {\n      onUpdateProduct(editingId, {\n        code: editForm.code,\n        name: editForm.name,\n        price: editForm.price ? parseFloat(editForm.price) : undefined,\n      })\n      setEditingId(null)\n      setEditForm({ code: \"\", name: \"\", price: \"\" })\n    }\n  }\n\n  function handleCancelEdit() {\n    setEditingId(null)\n    setEditForm({ code: \"\", name: \"\", price: \"\" })\n  }\n\n  function exportToCSV() {\n    const csvContent = [\n      \"C√≥digo,Nombre,Precio,Tipo\",\n      ...filteredProducts.map(\n        (product) =>\n          `${product.code},${product.name},${product.price || \"\"},${product.type}`\n      ),\n    ].join(\"\\n\")\n\n    const blob = new Blob([csvContent], { type: \"text/csv\" })\n    const url = window.URL.createObjectURL(blob)\n    const a = document.createElement(\"a\")\n    a.href = url\n    a.download = `productos_${activeTab}.csv`\n    a.click()\n    window.URL.revokeObjectURL(url)\n  }\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6 bg-white rounded-md shadow-md mt-8\">\n      <h2 className=\"text-2xl font-semibold mb-4\">Gesti√≥n de Productos</h2>\n      \n      {/* Tabs */}\n      <div className=\"flex border-b mb-4\">\n        <button\n          onClick={() => setActiveTab(\"minorista\")}\n          className={`px-4 py-2 font-medium ${\n            activeTab === \"minorista\"\n              ? \"border-b-2 border-black text-black\"\n              : \"text-gray-600 hover:text-black\"\n          }`}\n        >\n          Minorista\n        </button>\n        <button\n          onClick={() => setActiveTab(\"mayorista\")}\n          className={`px-4 py-2 font-medium ${\n            activeTab === \"mayorista\"\n              ? \"border-b-2 border-black text-black\"\n              : \"text-gray-600 hover:text-black\"\n          }`}\n        >\n          Mayorista\n        </button>\n      </div>\n\n      {/* Search and Export */}\n      <div className=\"flex flex-col md:flex-row gap-4 mb-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Buscar por c√≥digo o nombre...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"flex-1 p-2 border rounded\"\n        />\n        <button\n          onClick={exportToCSV}\n          className=\"px-4 py-2 bg-gray-800 text-white rounded hover:bg-gray-700 transition\"\n        >\n          Exportar Listado\n        </button>\n      </div>\n\n      {/* Products Table */}\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full border-collapse border border-gray-300\">\n          <thead>\n            <tr className=\"bg-gray-100\">\n              <th className=\"border border-gray-300 px-4 py-2 text-left\">C√≥digo</th>\n              <th className=\"border border-gray-300 px-4 py-2 text-left\">Nombre</th>\n              <th className=\"border border-gray-300 px-4 py-2 text-left\">Precio</th>\n              <th className=\"border border-gray-300 px-4 py-2 text-left\">Par√°metros</th>\n              <th className=\"border border-gray-300 px-4 py-2 text-left\">Acciones</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredProducts.length === 0 ? (\n              <tr>\n                <td colSpan={5} className=\"border border-gray-300 px-4 py-8 text-center text-gray-500\">\n                  No hay productos registrados en {activeTab}\n                </td>\n              </tr>\n            ) : (\n              filteredProducts.map((product) => (\n                <React.Fragment key={product.id}>\n                  <tr>\n                    <td className=\"border border-gray-300 px-4 py-2\">\n                      {editingId === product.id ? (\n                        <input\n                          type=\"text\"\n                          value={editForm.code}\n                          onChange={(e) => setEditForm({ ...editForm, code: e.target.value })}\n                          className=\"w-full p-1 border rounded\"\n                        />\n                      ) : (\n                        product.code\n                      )}\n                    </td>\n                    <td className=\"border border-gray-300 px-4 py-2\">\n                      {editingId === product.id ? (\n                        <input\n                          type=\"text\"\n                          value={editForm.name}\n                          onChange={(e) => setEditForm({ ...editForm, name: e.target.value })}\n                          className=\"w-full p-1 border rounded\"\n                        />\n                      ) : (\n                        product.name\n                      )}\n                    </td>\n                    <td className=\"border border-gray-300 px-4 py-2\">\n                      {editingId === product.id ? (\n                        <input\n                          type=\"number\"\n                          value={editForm.price}\n                          onChange={(e) => setEditForm({ ...editForm, price: e.target.value })}\n                          className=\"w-full p-1 border rounded\"\n                          placeholder=\"Precio\"\n                        />\n                      ) : (\n                        product.price ? `$${product.price.toFixed(2)}` : \"Sin precio\"\n                      )}\n                    </td>\n                    <td className=\"border border-gray-300 px-4 py-2\">\n                      {product.calculationParams ? (\n                        <button\n                          onClick={() => setViewingDetailsId(viewingDetailsId === product.id ? null : product.id)}\n                          className=\"px-2 py-1 bg-gray-600 text-white rounded text-sm hover:bg-gray-700\"\n                        >\n                          {viewingDetailsId === product.id ? \"Ocultar\" : \"Ver Detalle\"}\n                        </button>\n                      ) : (\n                        <span className=\"text-gray-500 text-sm\">Sin par√°metros</span>\n                      )}\n                    </td>\n                    <td className=\"border border-gray-300 px-4 py-2\">\n                      {editingId === product.id ? (\n                        <div className=\"flex gap-2\">\n                          <button\n                            onClick={handleSaveEdit}\n                            className=\"px-2 py-1 bg-green-600 text-white rounded text-sm hover:bg-green-700\"\n                          >\n                            Guardar\n                          </button>\n                          <button\n                            onClick={handleCancelEdit}\n                            className=\"px-2 py-1 bg-gray-600 text-white rounded text-sm hover:bg-gray-700\"\n                          >\n                            Cancelar\n                          </button>\n                        </div>\n                      ) : (\n                        <div className=\"flex gap-2\">\n                          <button\n                            onClick={() => handleEdit(product)}\n                            className=\"px-2 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700\"\n                          >\n                            Editar\n                          </button>\n                          <button\n                            onClick={() => onDeleteProduct(product.id)}\n                            className=\"px-2 py-1 bg-red-600 text-white rounded text-sm hover:bg-red-700\"\n                          >\n                            Eliminar\n                          </button>\n                        </div>\n                      )}\n                    </td>\n                  </tr>\n                  {viewingDetailsId === product.id && product.calculationParams && (\n                    <tr>\n                      <td colSpan={5} className=\"border border-gray-300 px-4 py-4 bg-gray-50\">\n                        <EditableParameters\n                          product={product}\n                          onUpdate={(updatedParams) => {\n                            const newPrice = calculateFinalPrice(updatedParams)\n                            onUpdateProduct(product.id, {\n                              calculationParams: updatedParams,\n                              price: newPrice,\n                            })\n                          }}\n                        />\n                      </td>\n                    </tr>\n                  )}\n                </React.Fragment>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\ninterface EditableParametersProps {\n  product: Product\n  onUpdate: (updatedParams: {\n    costoInicial: number\n    gastos: number\n    ganancia: number\n    publicidad: number\n    ingresosBrutos: number\n    costoFijoML: number\n    mercadolibre: number\n    costoFinanciero: number\n    pagoNube: number\n    iva: number\n    comisionTiendaNube: number\n  }) => void\n}\n\nfunction EditableParameters({ product, onUpdate }: EditableParametersProps) {\n  const [isEditing, setIsEditing] = useState(false)\n  const [params, setParams] = useState(product.calculationParams!)\n  const [error, setError] = useState<string | null>(null)\n\n  function handleSave() {\n    setError(null)\n    try {\n      onUpdate(params)\n      setIsEditing(false)\n    } catch (e) {\n      if (e instanceof Error) {\n        setError(e.message)\n      }\n    }\n  }\n\n  function handleCancel() {\n    setParams(product.calculationParams!)\n    setIsEditing(false)\n    setError(null)\n  }\n\n  if (!isEditing) {\n    return (\n      <div>\n        <div className=\"flex justify-between items-center mb-4\">\n          <h4 className=\"font-semibold\">Par√°metros de C√°lculo</h4>\n          <button\n            onClick={() => setIsEditing(true)}\n            className=\"px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700\"\n          >\n            Editar Par√°metros\n          </button>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <ul className=\"space-y-1 text-sm\">\n              <li>Costo Inicial: ${product.calculationParams!.costoInicial}</li>\n              <li>Gastos: {product.calculationParams!.gastos}%</li>\n              <li>Ganancia: ${product.calculationParams!.ganancia}</li>\n              <li>Publicidad: {product.calculationParams!.publicidad}%</li>\n              <li>Ingresos Brutos: {product.calculationParams!.ingresosBrutos}%</li>\n              <li>Costo Fijo ML: ${product.calculationParams!.costoFijoML}</li>\n            </ul>\n          </div>\n          <div>\n            <ul className=\"space-y-1 text-sm\">\n              <li>MercadoLibre: {product.calculationParams!.mercadolibre}%</li>\n              <li>Costo Financiero: {product.calculationParams!.costoFinanciero}%</li>\n              <li>Pago Nube: {product.calculationParams!.pagoNube}%</li>\n              <li>IVA: {product.calculationParams!.iva}%</li>\n              <li>Comisi√≥n Tienda Nube: {product.calculationParams!.comisionTiendaNube}%</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-4\">\n        <h4 className=\"font-semibold\">Editar Par√°metros de C√°lculo</h4>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={handleSave}\n            className=\"px-3 py-1 bg-green-600 text-white rounded text-sm hover:bg-green-700\"\n          >\n            Guardar\n          </button>\n          <button\n            onClick={handleCancel}\n            className=\"px-3 py-1 bg-gray-600 text-white rounded text-sm hover:bg-gray-700\"\n          >\n            Cancelar\n          </button>\n        </div>\n      </div>\n      \n      {error && <p className=\"text-red-600 text-sm mb-4\">{error}</p>}\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div className=\"space-y-3\">\n          <label className=\"flex flex-col\">\n            <span className=\"text-sm font-medium\">Costo Inicial</span>\n            <input\n              type=\"number\"\n              value={params.costoInicial}\n              onChange={(e) => setParams({ ...params, costoInicial: Number(e.target.value) })}\n              className=\"mt-1 p-2 border rounded text-sm\"\n            />\n          </label>\n          <label className=\"flex flex-col\">\n            <span className=\"text-sm font-medium\">Gastos (%)</span>\n            <input\n              type=\"number\"\n              value={params.gastos}\n              onChange={(e) => setParams({ ...params, gastos: Number(e.target.value) })}\n              className=\"mt-1 p-2 border rounded text-sm\"\n            />\n          </label>\n          <label className=\"flex flex-col\">\n            <span className=\"text-sm font-medium\">Ganancia ($)</span>\n            <input\n              type=\"number\"\n              value={params.ganancia}\n              onChange={(e) => setParams({ ...params, ganancia: Number(e.target.value) })}\n              className=\"mt-1 p-2 border rounded text-sm\"\n            />\n          </label>\n          <label className=\"flex flex-col\">\n            <span className=\"text-sm font-medium\">Publicidad (%)</span>\n            <input\n              type=\"number\"\n              value={params.publicidad}\n              onChange={(e) => setParams({ ...params, publicidad: Number(e.target.value) })}\n              className=\"mt-1 p-2 border rounded text-sm\"\n            />\n          </label>\n          <label className=\"flex flex-col\">\n            <span className=\"text-sm font-medium\">Ingresos Brutos (%)</span>\n            <input\n              type=\"number\"\n              value={params.ingresosBrutos}\n              onChange={(e) => setParams({ ...params, ingresosBrutos: Number(e.target.value) })}\n              className=\"mt-1 p-2 border rounded text-sm\"\n            />\n          </label>\n          <label className=\"flex flex-col\">\n            <span className=\"text-sm font-medium\">Costo Fijo ML ($)</span>\n            <input\n              type=\"number\"\n              value={params.costoFijoML}\n              onChange={(e) => setParams({ ...params, costoFijoML: Number(e.target.value) })}\n              className=\"mt-1 p-2 border rounded text-sm\"\n            />\n          </label>\n        </div>\n        <div className=\"space-y-3\">\n          <label className=\"flex flex-col\">\n            <span className=\"text-sm font-medium\">MercadoLibre (%)</span>\n            <input\n              type=\"number\"\n              value={params.mercadolibre}\n              onChange={(e) => setParams({ ...params, mercadolibre: Number(e.target.value) })}\n              className=\"mt-1 p-2 border rounded text-sm\"\n            />\n          </label>\n          <label className=\"flex flex-col\">\n            <span className=\"text-sm font-medium\">Costo Financiero (%)</span>\n            <input\n              type=\"number\"\n              value={params.costoFinanciero}\n              onChange={(e) => setParams({ ...params, costoFinanciero: Number(e.target.value) })}\n              className=\"mt-1 p-2 border rounded text-sm\"\n            />\n          </label>\n          <label className=\"flex flex-col\">\n            <span className=\"text-sm font-medium\">Pago Nube (%)</span>\n            <input\n              type=\"number\"\n              value={params.pagoNube}\n              onChange={(e) => setParams({ ...params, pagoNube: Number(e.target.value) })}\n              className=\"mt-1 p-2 border rounded text-sm\"\n            />\n          </label>\n          <label className=\"flex flex-col\">\n            <span className=\"text-sm font-medium\">IVA (%)</span>\n            <input\n              type=\"number\"\n              value={params.iva}\n              onChange={(e) => setParams({ ...params, iva: Number(e.target.value) })}\n              className=\"mt-1 p-2 border rounded text-sm\"\n            />\n          </label>\n          <label className=\"flex flex-col\">\n            <span className=\"text-sm font-medium\">Comisi√≥n Tienda Nube (%)</span>\n            <input\n              type=\"number\"\n              value={params.comisionTiendaNube}\n              onChange={(e) => setParams({ ...params, comisionTiendaNube: Number(e.target.value) })}\n              className=\"mt-1 p-2 border rounded text-sm\"\n            />\n          </label>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1936, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/MassParameterEditor.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState } from \"react\"\nimport { calculateFinalPrice } from \"@/lib/utils\"\n\ninterface Product {\n  id: string\n  code: string\n  name: string\n  price?: number\n  type: \"minorista\" | \"mayorista\"\n  calculationParams?: {\n    costoInicial: number\n    gastos: number\n    ganancia: number\n    publicidad: number\n    ingresosBrutos: number\n    costoFijoML: number\n    mercadolibre: number\n    costoFinanciero: number\n    pagoNube: number\n    iva: number\n    comisionTiendaNube: number\n  }\n}\n\ninterface MassParameterEditorProps {\n  products: Product[]\n  onUpdateProducts: (updatedProducts: Product[]) => void\n}\n\nexport default function MassParameterEditor({\n  products,\n  onUpdateProducts,\n}: MassParameterEditorProps) {\n  const [isOpen, setIsOpen] = useState(false)\n  const [newParams, setNewParams] = useState({\n    costoInicial: 4800,\n    gastos: 10,\n    ganancia: 3500,\n    publicidad: 10,\n    ingresosBrutos: 5,\n    costoFijoML: 1800,\n    mercadolibre: 16,\n    costoFinanciero: 5,\n    pagoNube: 5,\n    iva: 21,\n    comisionTiendaNube: 5,\n  })\n  const [selectedType, setSelectedType] = useState<\"all\" | \"minorista\" | \"mayorista\">(\"all\")\n  const [error, setError] = useState<string | null>(null)\n  const [success, setSuccess] = useState<string | null>(null)\n\n  function handleMassUpdate() {\n    setError(null)\n    setSuccess(null)\n\n    try {\n      const updatedProducts = products.map((product) => {\n        // Skip products that don't match the selected type filter\n        if (selectedType !== \"all\" && product.type !== selectedType) {\n          return product\n        }\n\n        // Skip products without calculation parameters\n        if (!product.calculationParams) {\n          return product\n        }\n\n        // Use the product's original costo inicial, but update other parameters\n        const updatedParams = {\n          ...newParams,\n          costoInicial: product.calculationParams.costoInicial, // Preserve original costo inicial\n        }\n\n        // Calculate new price with updated parameters (keeping original costo inicial)\n        const newPrice = calculateFinalPrice(updatedParams)\n\n        return {\n          ...product,\n          price: newPrice,\n          calculationParams: updatedParams,\n        }\n      })\n\n      onUpdateProducts(updatedProducts)\n      \n      const affectedCount = products.filter(p => \n        (selectedType === \"all\" || p.type === selectedType) && p.calculationParams\n      ).length\n\n      setSuccess(`Se actualizaron ${affectedCount} productos correctamente.`)\n    } catch (e) {\n      if (e instanceof Error) {\n        setError(e.message)\n      }\n    }\n  }\n\n  if (!isOpen) {\n    return (\n      <div className=\"max-w-6xl mx-auto p-6 bg-white rounded-md shadow-md mt-8\">\n        <div className=\"flex justify-between items-center\">\n          <h2 className=\"text-2xl font-semibold\">Edici√≥n Masiva de Par√°metros</h2>\n          <button\n            onClick={() => setIsOpen(true)}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition\"\n          >\n            Abrir Editor Masivo\n          </button>\n        </div>\n        <p className=\"text-gray-600 mt-2\">\n          Modifica par√°metros de c√°lculo y actualiza precios de m√∫ltiples productos a la vez.\n        </p>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6 bg-white rounded-md shadow-md mt-8\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-2xl font-semibold\">Edici√≥n Masiva de Par√°metros</h2>\n        <button\n          onClick={() => setIsOpen(false)}\n          className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition\"\n        >\n          Cerrar\n        </button>\n      </div>\n\n      {/* Filter Selection */}\n      <div className=\"mb-6\">\n        <label className=\"block text-sm font-medium mb-2\">Aplicar cambios a:</label>\n        <select\n          value={selectedType}\n          onChange={(e) => setSelectedType(e.target.value as \"all\" | \"minorista\" | \"mayorista\")}\n          className=\"p-2 border rounded\"\n        >\n          <option value=\"all\">Todos los productos</option>\n          <option value=\"minorista\">Solo productos minoristas</option>\n          <option value=\"mayorista\">Solo productos mayoristas</option>\n        </select>\n      </div>\n\n      {/* Parameter Inputs */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n        <label className=\"flex flex-col\">\n          Costo Inicial (solo para referencia)\n          <input\n            type=\"number\"\n            value={newParams.costoInicial}\n            onChange={(e) => setNewParams({ ...newParams, costoInicial: Number(e.target.value) })}\n            className=\"mt-1 p-2 border rounded bg-gray-100\"\n            disabled\n          />\n          <span className=\"text-xs text-gray-500 mt-1\">\n            Cada producto mantendr√° su costo inicial original\n          </span>\n        </label>\n        <label className=\"flex flex-col\">\n          Gastos (%)\n          <input\n            type=\"number\"\n            value={newParams.gastos}\n            onChange={(e) => setNewParams({ ...newParams, gastos: Number(e.target.value) })}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          Ganancia ($)\n          <input\n            type=\"number\"\n            value={newParams.ganancia}\n            onChange={(e) => setNewParams({ ...newParams, ganancia: Number(e.target.value) })}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          Publicidad (%)\n          <input\n            type=\"number\"\n            value={newParams.publicidad}\n            onChange={(e) => setNewParams({ ...newParams, publicidad: Number(e.target.value) })}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          Ingresos Brutos (%)\n          <input\n            type=\"number\"\n            value={newParams.ingresosBrutos}\n            onChange={(e) => setNewParams({ ...newParams, ingresosBrutos: Number(e.target.value) })}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          Costo Fijo ML ($)\n          <input\n            type=\"number\"\n            value={newParams.costoFijoML}\n            onChange={(e) => setNewParams({ ...newParams, costoFijoML: Number(e.target.value) })}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          MercadoLibre (%)\n          <input\n            type=\"number\"\n            value={newParams.mercadolibre}\n            onChange={(e) => setNewParams({ ...newParams, mercadolibre: Number(e.target.value) })}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          Costo Financiero (%)\n          <input\n            type=\"number\"\n            value={newParams.costoFinanciero}\n            onChange={(e) => setNewParams({ ...newParams, costoFinanciero: Number(e.target.value) })}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          Pago Nube (%)\n          <input\n            type=\"number\"\n            value={newParams.pagoNube}\n            onChange={(e) => setNewParams({ ...newParams, pagoNube: Number(e.target.value) })}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          IVA (%)\n          <input\n            type=\"number\"\n            value={newParams.iva}\n            onChange={(e) => setNewParams({ ...newParams, iva: Number(e.target.value) })}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n        <label className=\"flex flex-col\">\n          Comisi√≥n Tienda Nube (%)\n          <input\n            type=\"number\"\n            value={newParams.comisionTiendaNube}\n            onChange={(e) => setNewParams({ ...newParams, comisionTiendaNube: Number(e.target.value) })}\n            className=\"mt-1 p-2 border rounded\"\n          />\n        </label>\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"flex gap-4 mb-4\">\n        <button\n          onClick={handleMassUpdate}\n          className=\"px-6 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition\"\n        >\n          Aplicar Cambios Masivos\n        </button>\n      </div>\n\n      {/* Messages */}\n      {error && <p className=\"text-red-600 mb-4\">{error}</p>}\n      {success && <p className=\"text-green-600 mb-4\">{success}</p>}\n\n      {/* Preview */}\n      <div className=\"bg-gray-50 p-4 rounded-md\">\n        <h3 className=\"font-semibold mb-2\">Vista Previa:</h3>\n        <p className=\"text-sm text-gray-600\">\n          Productos que ser√°n afectados: {\n            products.filter(p => \n              (selectedType === \"all\" || p.type === selectedType) && p.calculationParams\n            ).length\n          }\n        </p>\n        <p className=\"text-sm text-gray-600\">\n          <strong>Nota:</strong> El costo inicial de cada producto se mantendr√°, solo se actualizar√°n los dem√°s par√°metros.\n        </p>\n        <p className=\"text-sm text-gray-600\">\n          Ejemplo de precio con par√°metros nuevos: ${(() => {\n            try {\n              return calculateFinalPrice(newParams).toFixed(2)\n            } catch {\n              return \"Error en c√°lculo\"\n            }\n          })()} (usando costo inicial de ejemplo: ${newParams.costoInicial})\n        </p>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AA+Be,SAAS,oBAAoB,EAC1C,QAAQ,EACR,gBAAgB,EACS;;IACzB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QACzC,cAAc;QACd,QAAQ;QACR,UAAU;QACV,YAAY;QACZ,gBAAgB;QAChB,aAAa;QACb,cAAc;QACd,iBAAiB;QACjB,UAAU;QACV,KAAK;QACL,oBAAoB;IACtB;IACA,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqC;IACpF,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEtD,SAAS;QACP,SAAS;QACT,WAAW;QAEX,IAAI;YACF,MAAM,kBAAkB,SAAS,GAAG,CAAC,CAAC;gBACpC,0DAA0D;gBAC1D,IAAI,iBAAiB,SAAS,QAAQ,IAAI,KAAK,cAAc;oBAC3D,OAAO;gBACT;gBAEA,+CAA+C;gBAC/C,IAAI,CAAC,QAAQ,iBAAiB,EAAE;oBAC9B,OAAO;gBACT;gBAEA,wEAAwE;gBACxE,MAAM,gBAAgB;oBACpB,GAAG,SAAS;oBACZ,cAAc,QAAQ,iBAAiB,CAAC,YAAY;gBACtD;gBAEA,+EAA+E;gBAC/E,MAAM,WAAW,CAAA,GAAA,sHAAA,CAAA,sBAAmB,AAAD,EAAE;gBAErC,OAAO;oBACL,GAAG,OAAO;oBACV,OAAO;oBACP,mBAAmB;gBACrB;YACF;YAEA,iBAAiB;YAEjB,MAAM,gBAAgB,SAAS,MAAM,CAAC,CAAA,IACpC,CAAC,iBAAiB,SAAS,EAAE,IAAI,KAAK,YAAY,KAAK,EAAE,iBAAiB,EAC1E,MAAM;YAER,WAAW,CAAC,gBAAgB,EAAE,cAAc,yBAAyB,CAAC;QACxE,EAAE,OAAO,GAAG;YACV,IAAI,aAAa,OAAO;gBACtB,SAAS,EAAE,OAAO;YACpB;QACF;IACF;IAEA,IAAI,CAAC,QAAQ;QACX,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAyB;;;;;;sCACvC,6LAAC;4BACC,SAAS,IAAM,UAAU;4BACzB,WAAU;sCACX;;;;;;;;;;;;8BAIH,6LAAC;oBAAE,WAAU;8BAAqB;;;;;;;;;;;;IAKxC;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAyB;;;;;;kCACvC,6LAAC;wBACC,SAAS,IAAM,UAAU;wBACzB,WAAU;kCACX;;;;;;;;;;;;0BAMH,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAM,WAAU;kCAAiC;;;;;;kCAClD,6LAAC;wBACC,OAAO;wBACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;wBAC/C,WAAU;;0CAEV,6LAAC;gCAAO,OAAM;0CAAM;;;;;;0CACpB,6LAAC;gCAAO,OAAM;0CAAY;;;;;;0CAC1B,6LAAC;gCAAO,OAAM;0CAAY;;;;;;;;;;;;;;;;;;0BAK9B,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO,UAAU,YAAY;gCAC7B,UAAU,CAAC,IAAM,aAAa;wCAAE,GAAG,SAAS;wCAAE,cAAc,OAAO,EAAE,MAAM,CAAC,KAAK;oCAAE;gCACnF,WAAU;gCACV,QAAQ;;;;;;0CAEV,6LAAC;gCAAK,WAAU;0CAA6B;;;;;;;;;;;;kCAI/C,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO,UAAU,MAAM;gCACvB,UAAU,CAAC,IAAM,aAAa;wCAAE,GAAG,SAAS;wCAAE,QAAQ,OAAO,EAAE,MAAM,CAAC,KAAK;oCAAE;gCAC7E,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO,UAAU,QAAQ;gCACzB,UAAU,CAAC,IAAM,aAAa;wCAAE,GAAG,SAAS;wCAAE,UAAU,OAAO,EAAE,MAAM,CAAC,KAAK;oCAAE;gCAC/E,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO,UAAU,UAAU;gCAC3B,UAAU,CAAC,IAAM,aAAa;wCAAE,GAAG,SAAS;wCAAE,YAAY,OAAO,EAAE,MAAM,CAAC,KAAK;oCAAE;gCACjF,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO,UAAU,cAAc;gCAC/B,UAAU,CAAC,IAAM,aAAa;wCAAE,GAAG,SAAS;wCAAE,gBAAgB,OAAO,EAAE,MAAM,CAAC,KAAK;oCAAE;gCACrF,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO,UAAU,WAAW;gCAC5B,UAAU,CAAC,IAAM,aAAa;wCAAE,GAAG,SAAS;wCAAE,aAAa,OAAO,EAAE,MAAM,CAAC,KAAK;oCAAE;gCAClF,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO,UAAU,YAAY;gCAC7B,UAAU,CAAC,IAAM,aAAa;wCAAE,GAAG,SAAS;wCAAE,cAAc,OAAO,EAAE,MAAM,CAAC,KAAK;oCAAE;gCACnF,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO,UAAU,eAAe;gCAChC,UAAU,CAAC,IAAM,aAAa;wCAAE,GAAG,SAAS;wCAAE,iBAAiB,OAAO,EAAE,MAAM,CAAC,KAAK;oCAAE;gCACtF,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO,UAAU,QAAQ;gCACzB,UAAU,CAAC,IAAM,aAAa;wCAAE,GAAG,SAAS;wCAAE,UAAU,OAAO,EAAE,MAAM,CAAC,KAAK;oCAAE;gCAC/E,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO,UAAU,GAAG;gCACpB,UAAU,CAAC,IAAM,aAAa;wCAAE,GAAG,SAAS;wCAAE,KAAK,OAAO,EAAE,MAAM,CAAC,KAAK;oCAAE;gCAC1E,WAAU;;;;;;;;;;;;kCAGd,6LAAC;wBAAM,WAAU;;4BAAgB;0CAE/B,6LAAC;gCACC,MAAK;gCACL,OAAO,UAAU,kBAAkB;gCACnC,UAAU,CAAC,IAAM,aAAa;wCAAE,GAAG,SAAS;wCAAE,oBAAoB,OAAO,EAAE,MAAM,CAAC,KAAK;oCAAE;gCACzF,WAAU;;;;;;;;;;;;;;;;;;0BAMhB,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;YAMF,uBAAS,6LAAC;gBAAE,WAAU;0BAAqB;;;;;;YAC3C,yBAAW,6LAAC;gBAAE,WAAU;0BAAuB;;;;;;0BAGhD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAqB;;;;;;kCACnC,6LAAC;wBAAE,WAAU;;4BAAwB;4BAEjC,SAAS,MAAM,CAAC,CAAA,IACd,CAAC,iBAAiB,SAAS,EAAE,IAAI,KAAK,YAAY,KAAK,EAAE,iBAAiB,EAC1E,MAAM;;;;;;;kCAGZ,6LAAC;wBAAE,WAAU;;0CACX,6LAAC;0CAAO;;;;;;4BAAc;;;;;;;kCAExB,6LAAC;wBAAE,WAAU;;4BAAwB;4BACQ,CAAC;gCAC1C,IAAI;oCACF,OAAO,CAAA,GAAA,sHAAA,CAAA,sBAAmB,AAAD,EAAE,WAAW,OAAO,CAAC;gCAChD,EAAE,OAAM;oCACN,OAAO;gCACT;4BACF,CAAC;4BAAI;4BAAqC,UAAU,YAAY;4BAAC;;;;;;;;;;;;;;;;;;;AAK3E;GAnQwB;KAAA","debugId":null}},
    {"offset": {"line": 2515, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState, useEffect } from \"react\"\nimport CalculatorForm from \"@/components/CalculatorForm\"\nimport ProductForm from \"@/components/ProductForm\"\nimport ProductList from \"@/components/ProductList\"\nimport MassParameterEditor from \"@/components/MassParameterEditor\"\nimport { v4 as uuidv4 } from \"uuid\"\n\ninterface Product {\n  id: string\n  code: string\n  name: string\n  price?: number\n  type: \"minorista\" | \"mayorista\"\n  calculationParams?: {\n    costoInicial: number\n    gastos: number\n    ganancia: number\n    publicidad: number\n    ingresosBrutos: number\n    costoFijoML: number\n    mercadolibre: number\n    costoFinanciero: number\n    pagoNube: number\n    iva: number\n    comisionTiendaNube: number\n  }\n}\n\nexport default function HomePage() {\n  const [products, setProducts] = useState<Product[]>([])\n  const [calculationResult, setCalculationResult] = useState<{\n    price: number | null\n    params: Product[\"calculationParams\"] | null\n  }>({ price: null, params: null })\n\n  // Load products from localStorage on mount\n  useEffect(() => {\n    const stored = localStorage.getItem(\"products\")\n    if (stored) {\n      setProducts(JSON.parse(stored))\n    }\n  }, [])\n\n  // Save products to localStorage on change\n  useEffect(() => {\n    localStorage.setItem(\"products\", JSON.stringify(products))\n  }, [products])\n\n  function addProduct(product: {\n    code: string\n    name: string\n    type: \"minorista\" | \"mayorista\"\n    price?: number\n    calculationParams?: Product[\"calculationParams\"]\n  }) {\n    const newProduct: Product = {\n      id: uuidv4(),\n      code: product.code,\n      name: product.name,\n      type: product.type,\n      price: product.price,\n      calculationParams: product.calculationParams,\n    }\n    setProducts((prev) => [...prev, newProduct])\n  }\n\n  function updateProduct(id: string, updates: Partial<Product>) {\n    setProducts((prev) =>\n      prev.map((p) => (p.id === id ? { ...p, ...updates } : p))\n    )\n  }\n\n  function updateMultipleProducts(updatedProducts: Product[]) {\n    setProducts(updatedProducts)\n  }\n\n  function deleteProduct(id: string) {\n    setProducts((prev) => prev.filter((p) => p.id !== id))\n  }\n\n  return (\n    <main className=\"max-w-7xl mx-auto p-6\">\n      <h1 className=\"text-4xl font-bold mb-8 text-center\">\n        Sistema de Calculadora y Gesti√≥n de Productos\n      </h1>\n      <CalculatorForm\n        onCalculation={(price, params) =>\n          setCalculationResult({ price, params })\n        }\n      />\n      <ProductForm\n        onAddProduct={addProduct}\n        calculatedPrice={calculationResult.price}\n        calculationParams={calculationResult.params}\n      />\n      <MassParameterEditor\n        products={products}\n        onUpdateProducts={updateMultipleProducts}\n      />\n      <ProductList\n        products={products}\n        onUpdateProduct={updateProduct}\n        onDeleteProduct={deleteProduct}\n      />\n    </main>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AA8Be,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAGtD;QAAE,OAAO;QAAM,QAAQ;IAAK;IAE/B,2CAA2C;IAC3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,MAAM,SAAS,aAAa,OAAO,CAAC;YACpC,IAAI,QAAQ;gBACV,YAAY,KAAK,KAAK,CAAC;YACzB;QACF;6BAAG,EAAE;IAEL,0CAA0C;IAC1C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,aAAa,OAAO,CAAC,YAAY,KAAK,SAAS,CAAC;QAClD;6BAAG;QAAC;KAAS;IAEb,SAAS,WAAW,OAMnB;QACC,MAAM,aAAsB;YAC1B,IAAI,CAAA,GAAA,wLAAA,CAAA,KAAM,AAAD;YACT,MAAM,QAAQ,IAAI;YAClB,MAAM,QAAQ,IAAI;YAClB,MAAM,QAAQ,IAAI;YAClB,OAAO,QAAQ,KAAK;YACpB,mBAAmB,QAAQ,iBAAiB;QAC9C;QACA,YAAY,CAAC,OAAS;mBAAI;gBAAM;aAAW;IAC7C;IAEA,SAAS,cAAc,EAAU,EAAE,OAAyB;QAC1D,YAAY,CAAC,OACX,KAAK,GAAG,CAAC,CAAC,IAAO,EAAE,EAAE,KAAK,KAAK;oBAAE,GAAG,CAAC;oBAAE,GAAG,OAAO;gBAAC,IAAI;IAE1D;IAEA,SAAS,uBAAuB,eAA0B;QACxD,YAAY;IACd;IAEA,SAAS,cAAc,EAAU;QAC/B,YAAY,CAAC,OAAS,KAAK,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IACpD;IAEA,qBACE,6LAAC;QAAK,WAAU;;0BACd,6LAAC;gBAAG,WAAU;0BAAsC;;;;;;0BAGpD,6LAAC,uIAAA,CAAA,UAAc;gBACb,eAAe,CAAC,OAAO,SACrB,qBAAqB;wBAAE;wBAAO;oBAAO;;;;;;0BAGzC,6LAAC,oIAAA,CAAA,UAAW;gBACV,cAAc;gBACd,iBAAiB,kBAAkB,KAAK;gBACxC,mBAAmB,kBAAkB,MAAM;;;;;;0BAE7C,6LAAC,4IAAA,CAAA,UAAmB;gBAClB,UAAU;gBACV,kBAAkB;;;;;;0BAEpB,6LAAC,oIAAA,CAAA,UAAW;gBACV,UAAU;gBACV,iBAAiB;gBACjB,iBAAiB;;;;;;;;;;;;AAIzB;GA9EwB;KAAA","debugId":null}}]
}